{
	"info": {
		"_postman_id": "83918676-dd7e-4192-ae6f-9731a820bf43",
		"name": "Stats Service",
		"description": "Provides persistence of stats",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "courses",
			"item": [
				{
					"name": "/courses/:courseId/sessions/:sessionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f714137-9b96-445c-95a9-644808661118",
								"exec": [
									"pm.test(\"Should return Not Found when values are not present\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3142ebe8-1f7b-4daa-8a3c-20dc8726d21e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Identifies the user",
								"key": "X-User-Id",
								"value": "{{user1}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/courses/{{course1}}/sessions/{{session01}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses",
								"{{course1}}",
								"sessions",
								"{{session01}}"
							]
						},
						"description": "Fetches a single study session"
					},
					"response": [
						{
							"name": "Study session stats",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the user",
										"key": "X-User-Id",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/courses/:courseId/sessions/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"courses",
										":courseId",
										"sessions",
										":sessionId"
									],
									"variable": [
										{
											"key": "courseId"
										},
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sessionId\": \"urn:uuid:36c57bfb-d660-748b-4f49-6ed6f05a3b19\",\n \"totalModulesStudied\": -80637159.7495382,\n \"averageScore\": -71863462.14816947,\n \"timeStudied\": 49320296.96465552\n}"
						}
					]
				},
				{
					"name": "/courses/:courseId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6294f515-be16-44a4-aed7-214496cc37e5",
								"exec": [
									"pm.test(\"Should return Not Found when course is not present\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Identifies the user",
								"key": "X-User-Id",
								"value": "{{user1}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/courses/{{course1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses",
								"{{course1}}"
							]
						},
						"description": "Fetches course lifetime statistics"
					},
					"response": [
						{
							"name": "Course lifetime stats",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the user",
										"key": "X-User-Id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/courses/:courseId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"courses",
										":courseId"
									],
									"variable": [
										{
											"key": "courseId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"totalModulesStudied\": -83101294.9397291,\n \"averageScore\": 29046007.213106766,\n \"timeStudied\": -19766712.2807879\n}"
						}
					]
				},
				{
					"name": "/courses/:courseId session1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f086d5-2732-40ab-b09d-9d545cc9a61b",
								"exec": [
									"pm.test(\"Should return 201 (created) when adding session1 to course1 for user1\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) Identifies the user",
								"key": "X-User-Id",
								"value": "{{user1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sessionId\": \"{{session01}}\",\n    \"totalModulesStudied\": 7,\n    \"averageScore\": 2,\n    \"timeStudied\": 999\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/courses/{{course1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses",
								"{{course1}}"
							]
						},
						"description": "Persists a session study event"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Identifies the user",
										"key": "X-User-Id",
										"value": "<uuid>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sessionId\": \"<uuid>\",\n    \"totalModulesStudied\": \"<number>\",\n    \"averageScore\": \"<number>\",\n    \"timeStudied\": \"<number>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/courses/:courseId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"courses",
										":courseId"
									],
									"variable": [
										{
											"key": "courseId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/courses/:courseId/sessions/:sessionId session1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebd33b15-833e-405f-b2d2-cab0a896639d",
								"exec": [
									"pm.test(\"Should return an object with valid fields\", function () {",
									"    pm.response.to.have.jsonBody(\"totalModulesStudied\");",
									"    pm.response.to.have.jsonBody(\"averageScore\");",
									"    pm.response.to.have.jsonBody(\"timeStudied\");",
									"});",
									"",
									"pm.test(\"Should return fields added for session1\", function () {",
									"    pm.expect(pm.response.json().totalModulesStudied).to.equal(7);",
									"    pm.expect(pm.response.json().averageScore).to.equal(2);",
									"    pm.expect(pm.response.json().timeStudied).to.equal(999);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Identifies the user",
								"key": "X-User-Id",
								"value": "{{user1}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/courses/{{course1}}/sessions/{{session01}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses",
								"{{course1}}",
								"sessions",
								"{{session01}}"
							]
						},
						"description": "Fetches a single study session"
					},
					"response": [
						{
							"name": "Study session stats",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the user",
										"key": "X-User-Id",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/courses/:courseId/sessions/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"courses",
										":courseId",
										"sessions",
										":sessionId"
									],
									"variable": [
										{
											"key": "courseId"
										},
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sessionId\": \"urn:uuid:36c57bfb-d660-748b-4f49-6ed6f05a3b19\",\n \"totalModulesStudied\": -80637159.7495382,\n \"averageScore\": -71863462.14816947,\n \"timeStudied\": 49320296.96465552\n}"
						}
					]
				},
				{
					"name": "/courses/:courseId only session1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "919fc5ae-724f-41c6-9fd0-18fb9b09c306",
								"exec": [
									"pm.test(\"Should return an object with valid fields\", function () {",
									"    pm.response.to.have.jsonBody(\"totalModulesStudied\");",
									"    pm.response.to.have.jsonBody(\"averageScore\");",
									"    pm.response.to.have.jsonBody(\"timeStudied\");",
									"});",
									"",
									"pm.test(\"Should return fields added for session1\", function () {",
									"    pm.expect(pm.response.json().totalModulesStudied).to.equal(7);",
									"    pm.expect(pm.response.json().averageScore).to.equal(2);",
									"    pm.expect(pm.response.json().timeStudied).to.equal(999);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Identifies the user",
								"key": "X-User-Id",
								"value": "{{user1}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/courses/{{course1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses",
								"{{course1}}"
							]
						},
						"description": "Fetches course lifetime statistics"
					},
					"response": [
						{
							"name": "Course lifetime stats",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the user",
										"key": "X-User-Id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/courses/:courseId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"courses",
										":courseId"
									],
									"variable": [
										{
											"key": "courseId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"totalModulesStudied\": -83101294.9397291,\n \"averageScore\": 29046007.213106766,\n \"timeStudied\": -19766712.2807879\n}"
						}
					]
				},
				{
					"name": "/courses/:courseId/sessions/:sessionId session2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7603897-f947-4380-b8d4-7352fcd153a4",
								"exec": [
									"pm.test(\"Should return Not Found when session2 is not present\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2f15797b-dc70-4819-8282-22a72e8bca0b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Identifies the user",
								"key": "X-User-Id",
								"value": "{{user1}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/courses/{{course1}}/sessions/{{session02}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses",
								"{{course1}}",
								"sessions",
								"{{session02}}"
							]
						},
						"description": "Fetches a single study session"
					},
					"response": [
						{
							"name": "Study session stats",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the user",
										"key": "X-User-Id",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/courses/:courseId/sessions/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"courses",
										":courseId",
										"sessions",
										":sessionId"
									],
									"variable": [
										{
											"key": "courseId"
										},
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sessionId\": \"urn:uuid:36c57bfb-d660-748b-4f49-6ed6f05a3b19\",\n \"totalModulesStudied\": -80637159.7495382,\n \"averageScore\": -71863462.14816947,\n \"timeStudied\": 49320296.96465552\n}"
						}
					]
				},
				{
					"name": "/courses/:courseId session2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7cb913d-d84a-459d-a8f9-40c17c63ef08",
								"exec": [
									"pm.test(\"Adding session1 to course1 for user1 should return 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) Identifies the user",
								"key": "X-User-Id",
								"value": "{{user1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sessionId\": \"{{session02}}\",\n    \"totalModulesStudied\": 3,\n    \"averageScore\": 3,\n    \"timeStudied\": 999\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/courses/{{course1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses",
								"{{course1}}"
							]
						},
						"description": "Persists a session study event"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Identifies the user",
										"key": "X-User-Id",
										"value": "<uuid>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sessionId\": \"<uuid>\",\n    \"totalModulesStudied\": \"<number>\",\n    \"averageScore\": \"<number>\",\n    \"timeStudied\": \"<number>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/courses/:courseId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"courses",
										":courseId"
									],
									"variable": [
										{
											"key": "courseId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "/courses/:courseId/sessions/:sessionId session2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24c62ecb-5f24-4f96-8fdd-2dd3cd243695",
								"exec": [
									"pm.test(\"Should return an object with valid fields\", function () {",
									"    pm.response.to.have.jsonBody(\"totalModulesStudied\");",
									"    pm.response.to.have.jsonBody(\"averageScore\");",
									"    pm.response.to.have.jsonBody(\"timeStudied\");",
									"});",
									"",
									"pm.test(\"Should return an fields added for session2\", function () {",
									"    pm.expect(pm.response.json().totalModulesStudied).to.equal(3);",
									"    pm.expect(pm.response.json().averageScore).to.equal(3);",
									"    pm.expect(pm.response.json().timeStudied).to.equal(999);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Identifies the user",
								"key": "X-User-Id",
								"value": "{{user1}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/courses/{{course1}}/sessions/{{session02}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses",
								"{{course1}}",
								"sessions",
								"{{session02}}"
							]
						},
						"description": "Fetches a single study session"
					},
					"response": [
						{
							"name": "Study session stats",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the user",
										"key": "X-User-Id",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/courses/:courseId/sessions/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"courses",
										":courseId",
										"sessions",
										":sessionId"
									],
									"variable": [
										{
											"key": "courseId"
										},
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sessionId\": \"urn:uuid:36c57bfb-d660-748b-4f49-6ed6f05a3b19\",\n \"totalModulesStudied\": -80637159.7495382,\n \"averageScore\": -71863462.14816947,\n \"timeStudied\": 49320296.96465552\n}"
						}
					]
				},
				{
					"name": "/courses/:courseId session1 and session2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "428bf231-262e-4662-9371-28cc5fd5a101",
								"exec": [
									"pm.test(\"Should return an object with valid fields\", function () {",
									"    pm.response.to.have.jsonBody(\"totalModulesStudied\");",
									"    pm.response.to.have.jsonBody(\"averageScore\");",
									"    pm.response.to.have.jsonBody(\"timeStudied\");",
									"});",
									"",
									"pm.test(\"Should return fields added for session1 and session2\", function () {",
									"    pm.expect(pm.response.json().totalModulesStudied).to.equal(10);",
									"    pm.expect(pm.response.json().averageScore).to.equal(2.3);",
									"    pm.expect(pm.response.json().timeStudied).to.equal(1998);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Identifies the user",
								"key": "X-User-Id",
								"value": "{{user1}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/courses/{{course1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses",
								"{{course1}}"
							]
						},
						"description": "Fetches course lifetime statistics"
					},
					"response": [
						{
							"name": "Course lifetime stats",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Identifies the user",
										"key": "X-User-Id",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/courses/:courseId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"courses",
										":courseId"
									],
									"variable": [
										{
											"key": "courseId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"totalModulesStudied\": -83101294.9397291,\n \"averageScore\": 29046007.213106766,\n \"timeStudied\": -19766712.2807879\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}